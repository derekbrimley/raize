from django import forms
from django.contrib.auth import authenticate, login
from quiz.models import MyUser

class QuizForm(forms.Form):
	first_name = forms.CharField(label='First Name', max_length=100,widget=forms.TextInput(attrs={'class': 'registrationInput'}))
	last_name = forms.CharField(label='Last Name', max_length=100,widget=forms.TextInput(attrs={'class': 'registrationInput'}))
	email = forms.CharField(label='Email', max_length=100,widget=forms.TextInput(attrs={'class': 'registrationInput'}))
	password = forms.CharField(widget=forms.PasswordInput(attrs={'class': 'registrationInput'}))
	password2 = forms.CharField(widget=forms.PasswordInput(attrs={'class': 'registrationInput'}))
	value_1 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_2 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_3 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_4 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_5 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_6 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_7 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_8 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_9 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_10 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	interest_1 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_2 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_3 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_4 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_5 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_6 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_7 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_8 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_9 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_10 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_11 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_12 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_13 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_14 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_15 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_16 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_17 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_18 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_1 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_2 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_3 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_4 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_5 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_6 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_7 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_8 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_9 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_10 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_11 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_12 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	metric_1 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_2 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_3 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_4 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_5 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_6 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_7 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_8 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_9 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_10 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_11 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_12 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_13 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_14 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_15 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_16 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_17 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_18 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
#	major_1 = forms.CharField(max_length=100, widget=forms.HiddenInput)
#	major_2 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
#	major_3 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
#	major_4 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
#	major_5 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
	
	def clean_email(self):
		data = self.cleaned_data['email']
		emails = MyUser.objects.values_list("email", flat=True).distinct()
		if(data in emails):
			raise forms.ValidationError("Email already in system.")
		
		return data

class FriendQuizForm(forms.Form):
	value_1 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_2 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_3 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_4 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_5 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_6 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_7 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_8 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_9 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	value_10 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	interest_1 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_2 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_3 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_4 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_5 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_6 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_7 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_8 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_9 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_10 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_11 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_12 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_13 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_14 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_15 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_16 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_17 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	interest_18 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_1 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_2 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_3 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_4 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_5 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_6 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_7 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_8 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_9 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_10 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_11 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	adjective_12 = forms.BooleanField(widget=forms.HiddenInput, required=False)
	metric_1 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_2 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_3 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_4 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_5 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_6 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_7 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_8 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_9 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_10 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_11 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_12 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_13 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_14 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_15 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_16 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_17 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
	metric_18 = forms.IntegerField(min_value=0, max_value=100, widget=forms.HiddenInput)
#	major_1 = forms.CharField(max_length=100, widget=forms.HiddenInput)
#	major_2 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
#	major_3 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
#	major_4 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
#	major_5 = forms.CharField(max_length=100, widget=forms.HiddenInput, required=False)
	user_id = forms.CharField(widget=forms.HiddenInput)
	
class EmailForm(forms.Form):
	email_1 = forms.CharField(required=False,label='Email', max_length=100,widget=forms.TextInput(attrs={'class': 'contactEmailInput'}))
	email_2 = forms.CharField(required=False,label='Email', max_length=100,widget=forms.TextInput(attrs={'class': 'contactEmailInput'}))
	email_3 = forms.CharField(required=False,label='Email', max_length=100,widget=forms.TextInput(attrs={'class': 'contactEmailInput'}))
	email_4 = forms.CharField(required=False,label='Email', max_length=100,widget=forms.TextInput(attrs={'class': 'contactEmailInput'}))
	email_5 = forms.CharField(required=False,label='Email', max_length=100,widget=forms.TextInput(attrs={'class': 'contactEmailInput'}))
	email_6 = forms.CharField(required=False,label='Email', max_length=100,widget=forms.TextInput(attrs={'class': 'contactEmailInput'}))
	

class LoginForm(forms.Form):
	username = forms.CharField(widget=forms.TextInput(attrs={'placeholder': 'Email', 'class': 'form_input'}), max_length=100, label='Email')
	password = forms.CharField(widget=forms.PasswordInput(attrs={'placeholder': 'Password', 'class': 'form_input'}), label='Password')
	
	def clean(self):
		username = self.cleaned_data.get('username')
		password = self.cleaned_data.get('password')
		user = authenticate(username=username, password=password)
		if not user or not user.is_active:
			raise forms.ValidationError("Sorry, that login was invalid. Please try again.")
		return self.cleaned_data
	
	def login(self, request):
		username = self.cleaned_data.get('username')
		password = self.cleaned_data.get('password')
		user = authenticate(username=username, password=password)
		return user
	
class EditProfileForm(forms.Form):
	first_name = forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class': 'form_input'}))
	last_name = forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class': 'form_input'}))
	
